/* Global Reset */
* {
	margin: 0;
	padding: 0;
}

/* page sections */
body {
	color: #444;
	font-family: sans-serif;
	border-top: 10px solid #1098ad;
	position: relative;
}

.main-header {
	background-color: #f7f7f7;
	/* padding: 20px;
	padding-left: 40px;
	padding-right: 40px; */
	padding: 20px 40px;
	margin-bottom: 60px;
	/* height: 80px; */
	/* overflow: scroll; */
}

#author {
	font-style: italic;
	font-size: 18px;
}

article {
	margin-bottom: 60px;
}
.post-header {
	margin-bottom: 40px;
	/* position: relative; */
}

aside {
	background-color: #f7f7f7;
	border-top: 5px solid #2cb7d6fc;
	border-bottom: 5px solid #2cb7d6fc;
	padding: 50px 0;
	width: 500px;
}

/* Note : not all the properties are inherited from parent, only the one related to font size, weight, color etc are inherited. */

/* small sections */
h1,
h2,
h3 {
	color: #2cb7d6fc;
}

h1 {
	font-size: 26px;
	text-transform: uppercase;
	font-style: italic;
}

h2 {
	font-size: 40px;
	margin-bottom: 30px;
	/* background-color: orange; */
	position: relative;
}
/* creating label "TOP" */
h2::after {
	content: "TOP";
	display: inline-block;
	background-color: yellow;
	color: black;
	font-size: 20px;
	font-weight: bold;
	padding: 5px 10px;
	position: absolute;
	top: -15px;
	right: -30px;
}

p {
	font-size: 22px;
	line-height: 1.5;
	margin-bottom: 15px;
}

ol,
ul {
	margin-left: 50px;
	margin-bottom: 20px;
}
h3 {
	font-family: sans-serif;
	font-size: 30px;
	margin-bottom: 20px;
	margin-top: 40px;
}

h4 {
	font-size: 20px;
	text-transform: uppercase;
	text-align: center;
}

li {
	font-size: 20px;
	/* padding: 5px; */
	margin-bottom: 10px;
}

li:last-child {
	margin-bottom: 0;
}

footer p {
	font-size: 16px;
	text-align: right;
}

/* article header p {
	font-style: italic;
} */

#copyright {
	font-size: 16px;
	text-align: right;
}
.related-author {
	font-size: 18px;
	font-weight: bold;
}

/* remove bullet points */
/* ul {
	list-style: none;
} */

.related {
	list-style: none;
}

/* body {
	background-color: rgb(221, 221, 243);
} */

/* .first-li {
	font-weight: bold;
} */

/* pseudo class */
li:first-child {
	font-weight: bold;
}
li:last-child {
	font-style: italic;
}

/* li:nth-child(2) {
	color: red;
} */

/* li:nth-child(odd) {
	color: green;
} */

/* misconception about pseudo class:  */
article p:first-child {
	/*trying to select to selet the p element if it is the first child element of the article element*/
	color: red;
} /* The above will not work as p  is not the first child of the article element , rather header is the first child */

article p:last-child {
	color: red;
}

a:link {
	color: #1098ad;
	text-decoration: none;
}

a:visited {
	/* color: #777; */
	color: #1098ad;
}

a:hover {
	color: orangered;
}
a:active {
	color: black;
}

.post-img {
	width: 100%;
	height: auto;
}

nav a:link {
	/* background-color: orangered;
	margin: 20px;
	padding: 20px; */
	/* display: block; */

	margin-top: 10px;
	margin-right: 30px;
	display: inline-block;
}
nav a:link:last-child {
	margin-right: 0;
}

.container {
	width: 1200px;
	/* margin-left: auto;
	margin-right: auto; */
	/* margin on both side set to auto to have same margin on both side and hence our page will be centred. */
	/* shorthand */
	margin: 0 auto;
	/* position: relative; */
}

.like-btn {
	font-size: 22px;
	padding: 20px;
	cursor: pointer;
	position: absolute;
	/* top: 0;
	left: 0; */
	bottom: 50px;
	right: 50px;
}

.author-img {
	float: left;
	margin-bottom: 20px;
}

#author {
	/* padding-left: 80px; */
	float: left;
	margin-top: 10px;
	margin-left: 20px;
}
h1 {
	float: left;
}
nav {
	float: right;
}

/* ways to prevent height collapsing of the parent element becaues of float property of the all the child element */

/* Method 1: create one empty div element in html file  in the parent div and clear float :both in css */
/* .clear {
	clear: both;
} */

/* method 2: create pseudo element in the parent using css directly and clear:both and set display: block as clear property applty app;ies only on block item and by default pseudo element has inline property , and also do declare the content property even if empty as it is necessary for pseudo element */
.clearfix::after {
	content: "";
	clear: both;
	display: block;
}

article {
	/* background-color: green; */
	width: 825px;
	float: left;
}

aside {
	/* background-color: red; */
	width: 300px;
	float: right;
}

footer {
	/* background-color: yellow; */
	clear: both;
}
